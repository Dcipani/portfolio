import React, { useEffect, useRef } from 'react';
import { gsap } from 'gsap';
import { ScrollTrigger } from 'gsap/ScrollTrigger';
import './style.scss';

gsap.registerPlugin(ScrollTrigger);

const Yarn = () => {
  const svgRef = useRef(null);

  useEffect(() => {
    const path = svgRef.current.querySelector('path');
    const pathLength = path.getTotalLength();

    const initialOffset = pathLength * 0.275; 
    const scrollMultiplier = 0.615; 

    gsap.set(path, {
      strokeDasharray: pathLength,
      strokeDashoffset: pathLength, 
      opacity: 1,
    });

    gsap.to(path, {
      strokeDashoffset: pathLength - initialOffset, 
      duration: 1.5, 
      ease: "power1.inOut",
      onComplete: () => {
        ScrollTrigger.create({
          trigger: svgRef.current,
          start: 'top 15%',
          end: 'bottom center',
          scrub: true,
          onUpdate: (self) => {
            const scrollPosition = window.scrollY + window.innerHeight; 
            const progress = (scrollPosition - self.start) / (self.end - self.start); 

            const boundedProgress = gsap.utils.clamp(0, 1, progress);
            
            const adjustedOffset = pathLength * scrollMultiplier; 
            const newOffset = pathLength - (adjustedOffset * boundedProgress); 
            gsap.set(path, { strokeDashoffset: newOffset }); 
          },
        });
      },
    });
  }, []);


  return (
    <div className="svg-container">
      <svg 
        ref={svgRef}
        className="thread"
        width="1600pt"
        height="1550pt"
        viewBox="0 0 40 187"
      >
        <path id="shape0" fill="none" stroke="#781e1e" stroke-width="0.36" stroke-linecap="square" stroke-linejoin="bevel" 
        d="M20.298 1.46489C19.9978 1.26472 19.6475 1.29808 19.2472 1.56497C18.6467 1.96529 17.0454 2.16545 17.6459 3.81677C18.2464 5.4681 22.5999 5.9685 22.8501 8.47051C23.1003 10.9725 22.4497 11.4229 20.8485 11.2227C19.2472 11.0226 15.8945 8.72071 16.8953 7.06938C17.8961 5.41806 19.3973 3.36641 21.0987 3.31637C22.8 3.26633 25.252 2.41565 24.9518 4.21709C24.6515 6.01854 24.9518 6.26874 23.8509 6.4689C23.1169 6.60234 22.5331 6.35214 22.0995 5.7183C20.7651 4.01693 21.082 3.49985 23.0502 4.16705C25.0185 4.83426 26.136 5.41806 26.4029 5.91846C27.6372 7.25286 27.6206 8.10355 26.3529 8.47051C25.0852 8.83747 22.8334 8.98759 19.5975 8.92087C17.0621 7.95343 17.1288 5.95182 19.7976 2.91605C23.8008 -1.6376 25.8024 0.914444 25.6523 1.66505C25.5522 2.16545 24.001 1.73177 20.9986 0.364002C17.1083 -0.0696796 15.3569 0.881084 15.7444 3.21629C16.3256 6.7191 18.8469 4.86762 19.2972 6.91926C19.7476 8.97091 17.207 11.6731 16.3256 10.372C15.4441 9.07099 16.3256 7.76995 16.3256 5.76834C16.3256 3.76673 13.7428 2.71589 13.7428 4.16705C13.7428 5.61822 13.4926 6.9693 15.294 6.76914C17.0954 6.56898 19.3973 3.61661 20.3981 4.91766C21.3989 6.2187 20.8485 6.06858 20.7484 8.12023C20.6483 10.1719 22.1495 11.1727 23.3505 10.7223C24.5514 10.272 25.9025 8.07019 25.5522 7.11942C25.202 6.16866 21.9994 4.01693 22.3497 2.86601C22.6999 1.71509 23.5506 1.66505 24.8016 2.51573C26.0526 3.36641 26.7532 3.46649 26.3028 4.76754C25.8525 6.06858 23.5506 6.61902 24.1011 7.76995C24.6515 8.92087 25.252 9.87163 25.7524 9.62143C26.2528 9.37123 27.1535 7.2195 26.553 6.2187C25.9526 5.2179 23.7007 -0.486681 21.0486 1.36481C19.2805 2.59913 17.9795 3.68333 17.1455 4.61742C15.6776 5.98518 15.0104 6.20202 15.1439 5.26794C15.2773 4.33385 16.0946 3.16625 17.5958 1.76513C23.4467 -0.937042 24.6977 -0.536721 21.3489 2.96609C16.3256 8.22031 21.2488 11.1226 21.8993 11.1727C22.5498 11.2227 23.4505 11.9733 24.4013 11.2728C25.0352 10.8057 24.7349 9.60475 23.5006 7.66987C21.4656 3.43313 21.8493 1.43153 24.6515 1.66505C28.8549 2.01533 26.8032 4.11701 26.4029 5.4681C26.0026 6.81918 26.4029 8.42047 27.0534 8.77075C27.704 9.12103 28.6547 9.57139 28.3044 10.322C28.0709 10.8224 28.121 11.2561 28.4546 11.623C32.9582 16.2935 33.5587 19.4126 30.256 20.9806C26.9534 22.5485 24.7349 24.4834 23.6007 26.7852C23.1336 27.6526 22.9335 28.5867 23.0002 29.5875C23.1003 31.0887 23.7007 32.6899 24.8016 31.7392C25.9025 30.7884 26.3028 29.7376 25.4021 29.7876C24.5014 29.8377 21.6491 29.5374 21.1487 30.8385C20.6483 32.1395 23.5506 40.8465 18.8469 40.5463C14.1431 40.246 12.1915 45.1499 13.1923 46.7012C14.1931 48.2524 17.1069 47.702 16.3256 46.1007C15.5442 44.4994 13.4926 46.6512 14.5934 48.8029C15.6943 50.9546 26.6031 57.4098 25.7524 60.4122C24.9017 63.4146 16.3949 79.6777 18.1463 81.6793C19.8977 83.6809 22.5999 81.4791 19.9477 80.1781C17.2956 78.877 10.9905 81.7293 11.8412 85.5324C12.6919 89.3354 16.2448 109.552 21.7492 106.399C27.2536 103.247 33.0583 107.75 31.2068 109.351C29.3553 110.953 28.3044 106.599 30.4562 106.649C32.6079 106.699 36.0607 109.902 35.3101 112.104C34.5595 114.305 33.5086 112.604 31.3069 113.805C29.1051 115.006 19.8977 115.506 24.5514 120.711C29.2052 125.915 21.3764 147.038 19.7624 148.312C18.1485 149.586 -12.5162 142.876 5.83165 160.034C24.1795 177.193 9.90895 184.297 7.19075 182.656C4.47254 181.016 7.70041 177.193 9.14446 177.448C10.5885 177.703 18.3184 181.78 11.4379 187.471C4.55749 193.163 2.09411 201.487 4.81232 202.761C7.53053 204.035 11.4379 201.487 7.95524 200.892C4.47254 200.298 5.7467 204.885 7.44558 205.819C9.14446 206.754 21.971 208.198 23.415 211.935C24.8591 215.673 19.0829 239.287 28.9364 240.561C38.7899 241.835 38.038 266.248 27.1818 270.809C16.3256 275.37 11.8711 262.991 21.3181 264.945C30.7651 266.9 6.65897 269.506 6.33321 288.074C6.00745 306.643 24.5757 307.294 25.8788 318.696C27.1818 330.097 15.7802 320.976 20.6666 319.021C25.553 317.067 30.1136 323.256 29.7879 329.771C29.4621 336.287 16.106 335.309 22.9469 350.62C27.5075 360.827 27.2904 366.256 22.2954 366.908L22.2954 366.908" 
        />
        </svg>
    </div>

  );
};

export default Yarn;
